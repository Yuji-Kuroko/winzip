#! /bin/sh
exec ruby -S -x "$0" "$@"
#! ruby

require "bundler/setup"
require "winzip"
require "thor"
require "zip"

require "pathname"
require "nkf"
require "find"

class Winzip::Command < Thor
  desc "compress [DIRECTORY]", "create zip"
  def compress(compress_target)
    compress_target_path = Pathname(compress_target)
    output_path = Pathname(compress_target_path.to_s + '.zip')
    unless compress_target_path.exist?
      STDERR.puts "File not found: #{compress_target}"
      return
    end

    filtered_files = %w[.DS_Store]

    Zip::File.open(output_path, Zip::File::CREATE) do |z_fp|
      Find.find(compress_target_path.to_s).select { |f|
        File.file?(f) && !filtered_files.include?(File.basename(f))
      }.each do |file_path|
        zip_content_path = [
          compress_target_path.basename,
          file_path.to_s.gsub(compress_target_path.to_s, ''),
        ].join

        z_fp.add(NKF.nkf('-w', zip_content_path), file_path)
      end
    end
  end
end

Winzip::Command.start(ARGV)
